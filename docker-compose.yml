version: '3.8'

services:
  app:
    build: .
    container_name: recipeforadisaster_app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database paths
      - RECIPES_DB_PATH=/app/data/recipes.db
      - USERS_DB_PATH=/app/data/users.db
      # JWT Configuration
      - JWT_SECRET=d3a94d963d2579b68a4addc3f6da661dd7fc9545efe5c72f42892d67c4500488
      - JWT_ISSUER=RecipeForADisaster
      - JWT_AUDIENCE=RecipeForADisaster-API
      - JWT_EXPIRATION_SECONDS=86400
      # Application settings
      - APP_NAME=RecipeForADisaster
      - APP_VERSION=2.4.0
      - WEB_HOST=0.0.0.0
      - WEB_PORT=8080
      # Azure OpenAI (configure these for AI features)
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-}
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY:-}
      - AZURE_OPENAI_DEPLOYMENT=${AZURE_OPENAI_DEPLOYMENT:-gpt-35-turbo}
    volumes:
      - recipe_data:/app/data
      - ./logs:/app/logs
    networks:
      - recipeforadisaster_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: recipeforadisaster_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - recipeforadisaster_network
    profiles:
      - production

volumes:
  recipe_data:
    driver: local

networks:
  recipeforadisaster_network:
    driver: bridge